name: Python testing

on: [push, workflow_dispatch]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python_version: ["3.10"]
    defaults:
      run:
        shell: bash  # For `source`
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}

    - name: OS specific setup (windows)
      if: runner.os == 'Windows'
      run: |
        echo 'ACTIVATE_PATH=venv/Scripts/activate' >> $GITHUB_ENV
        echo 'BINARY_EXTENSION=.exe' >> $GITHUB_ENV
    - name: OS specific setup (linux/mac)
      if: runner.os != 'Windows'
      run: |
        echo 'ACTIVATE_PATH=venv/bin/activate' >> $GITHUB_ENV
        echo 'BINARY_EXTENSION=' >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m ensurepip --upgrade
        python -m venv venv
        source ${{ env.ACTIVATE_PATH }}
        python -m pip install -r requirements.dev.txt

    - name: Run typechecking
      run: |
        source ${{ env.ACTIVATE_PATH }}
        mypy --strict .

    - name: Run tests
      run: |
        source ${{ env.ACTIVATE_PATH }}
        coverage run
        coverage report

    - name: Build single file binary with pyinstaller
      run: |
        source ${{ env.ACTIVATE_PATH }}
        pyinstaller prism.py --noconfirm --onefile --add-data=data/nick_database.json:data --icon=pyinstaller/who.ico --noconsole --name overlay${{ matrix.os }}

    - name: Upload built binary
      uses: actions/upload-artifact@v2
      with:
        name: prism-${{ matrix.os }}
        path: dist/prism-${{ matrix.os }}${{ env.BINARY_EXTENSION }}
        if-no-files-found: error
